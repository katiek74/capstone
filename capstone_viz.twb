<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook original-version='18.1' source-build='2020.3.3 (20203.20.1110.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CT_from_python+' inline='true' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CT_from_python' name='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb'>
            <connection class='textscan' directory='C:/Users/kkosf/Documents/nss/projects/capstone/data/CT_from_python' filename='CT_from_python.csv' password='' server='' />
          </named-connection>
          <named-connection caption='daily hospitalizations' name='textscan.1g95fut0hjwwjy11gosnm0qfzrja'>
            <connection class='textscan' directory='C:/Users/kkosf/Documents/nss/projects/capstone/data' filename='daily hospitalizations.csv' password='' server='' />
          </named-connection>
          <named-connection caption='total cases per country' name='excel-direct.12fxs5h11m100c16vr3mw0vbhbws'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kkosf/Documents/nss/projects/capstone/data/total cases per country.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='CT_covid_from_python.csv' table='[CT_covid_from_python#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='NCT Number' ordinal='1' />
            <column datatype='string' name='Title' ordinal='2' />
            <column datatype='string' name='Acronym' ordinal='3' />
            <column datatype='string' name='Status' ordinal='4' />
            <column datatype='string' name='Study Results' ordinal='5' />
            <column datatype='string' name='Conditions' ordinal='6' />
            <column datatype='string' name='Interventions' ordinal='7' />
            <column datatype='string' name='Outcome Measures' ordinal='8' />
            <column datatype='string' name='Sponsor/Collaborators' ordinal='9' />
            <column datatype='string' name='Gender' ordinal='10' />
            <column datatype='string' name='Age' ordinal='11' />
            <column datatype='string' name='Phases' ordinal='12' />
            <column datatype='real' name='Enrollment' ordinal='13' />
            <column datatype='string' name='Funded Bys' ordinal='14' />
            <column datatype='string' name='Study Type' ordinal='15' />
            <column datatype='string' name='Study Designs' ordinal='16' />
            <column datatype='string' name='Other IDs' ordinal='17' />
            <column datatype='date' name='Start Date' ordinal='18' />
            <column datatype='string' name='Primary Completion Date' ordinal='19' />
            <column datatype='date' name='Completion Date' ordinal='20' />
            <column datatype='date' name='First Posted' ordinal='21' />
            <column datatype='date' name='Results First Posted' ordinal='22' />
            <column datatype='date' name='Last Update Posted' ordinal='23' />
            <column datatype='string' name='Locations' ordinal='24' />
            <column datatype='string' name='Study Documents' ordinal='25' />
            <column datatype='string' name='URL' ordinal='26' />
            <column datatype='real' name='Study_Duration' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='CT_from_python.csv' table='[CT_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='nct_id' ordinal='0' />
              <column datatype='date' name='study_first_submitted_date' ordinal='1' />
              <column datatype='string' name='results_first_submitted_date' ordinal='2' />
              <column datatype='date' name='last_update_submitted_date' ordinal='3' />
              <column datatype='string' name='start_date_type' ordinal='4' />
              <column datatype='date' name='start_date' ordinal='5' />
              <column datatype='string' name='completion_date_type' ordinal='6' />
              <column datatype='date' name='completion_date' ordinal='7' />
              <column datatype='string' name='results_first_posted_date' ordinal='8' />
              <column datatype='string' name='target_duration' ordinal='9' />
              <column datatype='string' name='study_type' ordinal='10' />
              <column datatype='string' name='brief_title' ordinal='11' />
              <column datatype='string' name='official_title' ordinal='12' />
              <column datatype='string' name='overall_status' ordinal='13' />
              <column datatype='string' name='phase' ordinal='14' />
              <column datatype='real' name='enrollment' ordinal='15' />
              <column datatype='string' name='enrollment_type' ordinal='16' />
              <column datatype='string' name='source' ordinal='17' />
              <column datatype='string' name='limitations_and_caveats' ordinal='18' />
              <column datatype='string' name='why_stopped' ordinal='19' />
              <column datatype='boolean' name='has_expanded_access' ordinal='20' />
              <column datatype='boolean' name='is_fda_regulated_drug' ordinal='21' />
              <column datatype='boolean' name='is_fda_regulated_device' ordinal='22' />
              <column datatype='integer' name='start_year' ordinal='23' />
              <column datatype='real' name='number_of_facilities' ordinal='24' />
              <column datatype='integer' name='registered_in_calendar_year' ordinal='25' />
              <column datatype='real' name='actual_duration' ordinal='26' />
              <column datatype='boolean' name='were_results_reported' ordinal='27' />
              <column datatype='string' name='months_to_report_results' ordinal='28' />
              <column datatype='string' name='sponsor_type' ordinal='29' />
              <column datatype='string' name='lead_or_collaborator' ordinal='30' />
              <column datatype='string' name='sponsor' ordinal='31' />
              <column datatype='boolean' name='CovidStudy' ordinal='32' />
              <column datatype='string' name='reason_stopped' ordinal='33' />
            </columns>
          </relation>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='CT_covid_from_python.csv' table='[CT_covid_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='NCT Number' ordinal='1' />
              <column datatype='string' name='Title' ordinal='2' />
              <column datatype='string' name='Acronym' ordinal='3' />
              <column datatype='string' name='Status' ordinal='4' />
              <column datatype='string' name='Study Results' ordinal='5' />
              <column datatype='string' name='Conditions' ordinal='6' />
              <column datatype='string' name='Interventions' ordinal='7' />
              <column datatype='string' name='Outcome Measures' ordinal='8' />
              <column datatype='string' name='Sponsor/Collaborators' ordinal='9' />
              <column datatype='string' name='Gender' ordinal='10' />
              <column datatype='string' name='Age' ordinal='11' />
              <column datatype='string' name='Phases' ordinal='12' />
              <column datatype='real' name='Enrollment' ordinal='13' />
              <column datatype='string' name='Funded Bys' ordinal='14' />
              <column datatype='string' name='Study Type' ordinal='15' />
              <column datatype='string' name='Study Designs' ordinal='16' />
              <column datatype='string' name='Other IDs' ordinal='17' />
              <column datatype='date' name='Start Date' ordinal='18' />
              <column datatype='string' name='Primary Completion Date' ordinal='19' />
              <column datatype='date' name='Completion Date' ordinal='20' />
              <column datatype='date' name='First Posted' ordinal='21' />
              <column datatype='date' name='Results First Posted' ordinal='22' />
              <column datatype='date' name='Last Update Posted' ordinal='23' />
              <column datatype='string' name='Locations' ordinal='24' />
              <column datatype='string' name='Study Documents' ordinal='25' />
              <column datatype='string' name='URL' ordinal='26' />
              <column datatype='real' name='Study_Duration' ordinal='27' />
            </columns>
          </relation>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_conditions_from_python.csv' table='[ct_conditions_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='nct_id' ordinal='0' />
              <column datatype='string' name='condition' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_countries_from_python.csv' table='[ct_countries_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='nct_id' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='country_removed' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_interventions_from_python.csv' table='[ct_interventions_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='nct_id' ordinal='0' />
              <column datatype='string' name='intervention_type' ordinal='1' />
              <column datatype='string' name='intervention' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_sponsors_from_python.csv' table='[ct_sponsors_from_python#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='nct_id' ordinal='0' />
              <column datatype='string' name='sponsor_type' ordinal='1' />
              <column datatype='string' name='lead_or_collaborator' ordinal='2' />
              <column datatype='string' name='sponsor' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Acronym]' value='[CT_covid_from_python.csv].[Acronym]' />
          <map key='[Age]' value='[CT_covid_from_python.csv].[Age]' />
          <map key='[Completion Date]' value='[CT_covid_from_python.csv].[Completion Date]' />
          <map key='[Conditions]' value='[CT_covid_from_python.csv].[Conditions]' />
          <map key='[CovidStudy]' value='[CT_from_python.csv].[CovidStudy]' />
          <map key='[Enrollment]' value='[CT_covid_from_python.csv].[Enrollment]' />
          <map key='[First Posted]' value='[CT_covid_from_python.csv].[First Posted]' />
          <map key='[Funded Bys]' value='[CT_covid_from_python.csv].[Funded Bys]' />
          <map key='[Gender]' value='[CT_covid_from_python.csv].[Gender]' />
          <map key='[Interventions]' value='[CT_covid_from_python.csv].[Interventions]' />
          <map key='[Last Update Posted]' value='[CT_covid_from_python.csv].[Last Update Posted]' />
          <map key='[Locations]' value='[CT_covid_from_python.csv].[Locations]' />
          <map key='[NCT Number]' value='[CT_covid_from_python.csv].[NCT Number]' />
          <map key='[Other IDs]' value='[CT_covid_from_python.csv].[Other IDs]' />
          <map key='[Outcome Measures]' value='[CT_covid_from_python.csv].[Outcome Measures]' />
          <map key='[Phases]' value='[CT_covid_from_python.csv].[Phases]' />
          <map key='[Primary Completion Date]' value='[CT_covid_from_python.csv].[Primary Completion Date]' />
          <map key='[Rank]' value='[CT_covid_from_python.csv].[Rank]' />
          <map key='[Results First Posted]' value='[CT_covid_from_python.csv].[Results First Posted]' />
          <map key='[Sponsor/Collaborators]' value='[CT_covid_from_python.csv].[Sponsor/Collaborators]' />
          <map key='[Start Date]' value='[CT_covid_from_python.csv].[Start Date]' />
          <map key='[Status]' value='[CT_covid_from_python.csv].[Status]' />
          <map key='[Study Designs]' value='[CT_covid_from_python.csv].[Study Designs]' />
          <map key='[Study Documents]' value='[CT_covid_from_python.csv].[Study Documents]' />
          <map key='[Study Results]' value='[CT_covid_from_python.csv].[Study Results]' />
          <map key='[Study Type]' value='[CT_covid_from_python.csv].[Study Type]' />
          <map key='[Study_Duration]' value='[CT_covid_from_python.csv].[Study_Duration]' />
          <map key='[Title]' value='[CT_covid_from_python.csv].[Title]' />
          <map key='[URL]' value='[CT_covid_from_python.csv].[URL]' />
          <map key='[actual_duration]' value='[CT_from_python.csv].[actual_duration]' />
          <map key='[brief_title]' value='[CT_from_python.csv].[brief_title]' />
          <map key='[completion_date]' value='[CT_from_python.csv].[completion_date]' />
          <map key='[completion_date_type]' value='[CT_from_python.csv].[completion_date_type]' />
          <map key='[condition]' value='[ct_conditions_from_python.csv].[condition]' />
          <map key='[country]' value='[ct_countries_from_python.csv].[country]' />
          <map key='[country_removed]' value='[ct_countries_from_python.csv].[country_removed]' />
          <map key='[enrollment]' value='[CT_from_python.csv].[enrollment]' />
          <map key='[enrollment_type]' value='[CT_from_python.csv].[enrollment_type]' />
          <map key='[has_expanded_access]' value='[CT_from_python.csv].[has_expanded_access]' />
          <map key='[intervention]' value='[ct_interventions_from_python.csv].[intervention]' />
          <map key='[intervention_type]' value='[ct_interventions_from_python.csv].[intervention_type]' />
          <map key='[is_fda_regulated_device]' value='[CT_from_python.csv].[is_fda_regulated_device]' />
          <map key='[is_fda_regulated_drug]' value='[CT_from_python.csv].[is_fda_regulated_drug]' />
          <map key='[last_update_submitted_date]' value='[CT_from_python.csv].[last_update_submitted_date]' />
          <map key='[lead_or_collaborator (ct_sponsors_from_python.csv)]' value='[ct_sponsors_from_python.csv].[lead_or_collaborator]' />
          <map key='[lead_or_collaborator]' value='[CT_from_python.csv].[lead_or_collaborator]' />
          <map key='[limitations_and_caveats]' value='[CT_from_python.csv].[limitations_and_caveats]' />
          <map key='[months_to_report_results]' value='[CT_from_python.csv].[months_to_report_results]' />
          <map key='[nct_id (ct_conditions_from_python.csv)]' value='[ct_conditions_from_python.csv].[nct_id]' />
          <map key='[nct_id (ct_countries_from_python.csv)]' value='[ct_countries_from_python.csv].[nct_id]' />
          <map key='[nct_id (ct_interventions_from_python.csv)]' value='[ct_interventions_from_python.csv].[nct_id]' />
          <map key='[nct_id (ct_sponsors_from_python.csv)]' value='[ct_sponsors_from_python.csv].[nct_id]' />
          <map key='[nct_id]' value='[CT_from_python.csv].[nct_id]' />
          <map key='[number_of_facilities]' value='[CT_from_python.csv].[number_of_facilities]' />
          <map key='[official_title]' value='[CT_from_python.csv].[official_title]' />
          <map key='[overall_status]' value='[CT_from_python.csv].[overall_status]' />
          <map key='[phase]' value='[CT_from_python.csv].[phase]' />
          <map key='[reason_stopped]' value='[CT_from_python.csv].[reason_stopped]' />
          <map key='[registered_in_calendar_year]' value='[CT_from_python.csv].[registered_in_calendar_year]' />
          <map key='[results_first_posted_date]' value='[CT_from_python.csv].[results_first_posted_date]' />
          <map key='[results_first_submitted_date]' value='[CT_from_python.csv].[results_first_submitted_date]' />
          <map key='[source]' value='[CT_from_python.csv].[source]' />
          <map key='[sponsor (ct_sponsors_from_python.csv)]' value='[ct_sponsors_from_python.csv].[sponsor]' />
          <map key='[sponsor]' value='[CT_from_python.csv].[sponsor]' />
          <map key='[sponsor_type (ct_sponsors_from_python.csv)]' value='[ct_sponsors_from_python.csv].[sponsor_type]' />
          <map key='[sponsor_type]' value='[CT_from_python.csv].[sponsor_type]' />
          <map key='[start_date]' value='[CT_from_python.csv].[start_date]' />
          <map key='[start_date_type]' value='[CT_from_python.csv].[start_date_type]' />
          <map key='[start_year]' value='[CT_from_python.csv].[start_year]' />
          <map key='[study_first_submitted_date]' value='[CT_from_python.csv].[study_first_submitted_date]' />
          <map key='[study_type]' value='[CT_from_python.csv].[study_type]' />
          <map key='[target_duration]' value='[CT_from_python.csv].[target_duration]' />
          <map key='[were_results_reported]' value='[CT_from_python.csv].[were_results_reported]' />
          <map key='[why_stopped]' value='[CT_from_python.csv].[why_stopped]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ct_conditions_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ct_countries_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ct_interventions_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ct_sponsors_from_python.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nct_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nct_id]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>nct_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>study_first_submitted_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[study_first_submitted_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>study_first_submitted_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results_first_submitted_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[results_first_submitted_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>results_first_submitted_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update_submitted_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_update_submitted_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>last_update_submitted_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_date_type]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>start_date_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>completion_date_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[completion_date_type]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>completion_date_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>completion_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[completion_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>completion_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results_first_posted_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[results_first_posted_date]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>results_first_posted_date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_duration]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>target_duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>study_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[study_type]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>study_type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brief_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brief_title]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>brief_title</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>official_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[official_title]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>official_title</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>overall_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[overall_status]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>overall_status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phase]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>phase</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[enrollment]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>enrollment</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enrollment_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[enrollment_type]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>enrollment_type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>limitations_and_caveats</remote-name>
            <remote-type>129</remote-type>
            <local-name>[limitations_and_caveats]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>limitations_and_caveats</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>why_stopped</remote-name>
            <remote-type>129</remote-type>
            <local-name>[why_stopped]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>why_stopped</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>has_expanded_access</remote-name>
            <remote-type>11</remote-type>
            <local-name>[has_expanded_access]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>has_expanded_access</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_fda_regulated_drug</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_fda_regulated_drug]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>is_fda_regulated_drug</remote-alias>
            <ordinal>21</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_fda_regulated_device</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_fda_regulated_device]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>is_fda_regulated_device</remote-alias>
            <ordinal>22</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start_year]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>start_year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[number_of_facilities]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>number_of_facilities</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>registered_in_calendar_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[registered_in_calendar_year]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>registered_in_calendar_year</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_duration]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>actual_duration</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>were_results_reported</remote-name>
            <remote-type>11</remote-type>
            <local-name>[were_results_reported]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>were_results_reported</remote-alias>
            <ordinal>27</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_to_report_results</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_to_report_results]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>months_to_report_results</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sponsor_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sponsor_type]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>sponsor_type</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lead_or_collaborator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lead_or_collaborator]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>lead_or_collaborator</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sponsor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sponsor]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>sponsor</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CovidStudy</remote-name>
            <remote-type>11</remote-type>
            <local-name>[CovidStudy]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>CovidStudy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reason_stopped</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reason_stopped]</local-name>
            <parent-name>[CT_from_python.csv]</parent-name>
            <remote-alias>reason_stopped</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NCT Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NCT Number]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>NCT Number</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Acronym</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Acronym]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Acronym</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Study Results</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Study Results]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Study Results</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interventions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Interventions]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Interventions</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Outcome Measures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Outcome Measures]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Outcome Measures</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sponsor/Collaborators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sponsor/Collaborators]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Sponsor/Collaborators</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phases]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Phases</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Enrollment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Enrollment]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Enrollment</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Funded Bys</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Funded Bys]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Funded Bys</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Study Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Study Type]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Study Type</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Study Designs</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Study Designs]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Study Designs</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other IDs</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Other IDs]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Other IDs</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>52</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary Completion Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary Completion Date]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Primary Completion Date</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Completion Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Completion Date]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Completion Date</remote-alias>
            <ordinal>54</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Posted</remote-name>
            <remote-type>133</remote-type>
            <local-name>[First Posted]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>First Posted</remote-alias>
            <ordinal>55</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Results First Posted</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Results First Posted]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Results First Posted</remote-alias>
            <ordinal>56</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update Posted</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Last Update Posted]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Last Update Posted</remote-alias>
            <ordinal>57</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Locations]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Locations</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Study Documents</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Study Documents]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Study Documents</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Study_Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Study_Duration]</local-name>
            <parent-name>[CT_covid_from_python.csv]</parent-name>
            <remote-alias>Study_Duration</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nct_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nct_id (ct_conditions_from_python.csv)]</local-name>
            <parent-name>[ct_conditions_from_python.csv]</parent-name>
            <remote-alias>nct_id</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_conditions_from_python.csv_F56187E8449C4EB5A2B7D6C8F5FBB956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[ct_conditions_from_python.csv]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_conditions_from_python.csv_F56187E8449C4EB5A2B7D6C8F5FBB956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nct_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nct_id (ct_countries_from_python.csv)]</local-name>
            <parent-name>[ct_countries_from_python.csv]</parent-name>
            <remote-alias>nct_id</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[ct_countries_from_python.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_removed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_removed]</local-name>
            <parent-name>[ct_countries_from_python.csv]</parent-name>
            <remote-alias>country_removed</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nct_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nct_id (ct_interventions_from_python.csv)]</local-name>
            <parent-name>[ct_interventions_from_python.csv]</parent-name>
            <remote-alias>nct_id</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intervention_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[intervention_type]</local-name>
            <parent-name>[ct_interventions_from_python.csv]</parent-name>
            <remote-alias>intervention_type</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intervention</remote-name>
            <remote-type>129</remote-type>
            <local-name>[intervention]</local-name>
            <parent-name>[ct_interventions_from_python.csv]</parent-name>
            <remote-alias>intervention</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nct_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nct_id (ct_sponsors_from_python.csv)]</local-name>
            <parent-name>[ct_sponsors_from_python.csv]</parent-name>
            <remote-alias>nct_id</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sponsor_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sponsor_type (ct_sponsors_from_python.csv)]</local-name>
            <parent-name>[ct_sponsors_from_python.csv]</parent-name>
            <remote-alias>sponsor_type</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lead_or_collaborator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lead_or_collaborator (ct_sponsors_from_python.csv)]</local-name>
            <parent-name>[ct_sponsors_from_python.csv]</parent-name>
            <remote-alias>lead_or_collaborator</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sponsor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sponsor (ct_sponsors_from_python.csv)]</local-name>
            <parent-name>[ct_sponsors_from_python.csv]</parent-name>
            <remote-alias>sponsor</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Completion Date1' datatype='date' name='[Completion Date]' role='dimension' type='ordinal' />
      <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
      <column caption='Enrollment1' datatype='real' name='[Enrollment]' role='measure' type='quantitative' />
      <column caption='Interventions1' datatype='string' name='[Interventions]' role='dimension' type='nominal' />
      <column caption='Start Date1' datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
      <column caption='Study Type1' datatype='string' name='[Study Type]' role='dimension' type='nominal' />
      <column caption='Study Duration' datatype='real' name='[Study_Duration]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CT_covid_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CT_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ct_conditions_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[ct_conditions_from_python.csv_F56187E8449C4EB5A2B7D6C8F5FBB956]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ct_countries_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ct_interventions_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ct_sponsors_from_python.csv' datatype='table' name='[__tableau_internal_object_id__].[ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23]' role='measure' type='quantitative' />
      <column caption='Actual Duration' datatype='real' name='[actual_duration]' role='measure' type='quantitative' />
      <column caption='Brief Title' datatype='string' name='[brief_title]' role='dimension' type='nominal' />
      <column caption='Completion Date' datatype='date' name='[completion_date]' role='dimension' type='ordinal' />
      <column caption='Completion Date Type' datatype='string' name='[completion_date_type]' role='dimension' type='nominal' />
      <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Removed' datatype='string' name='[country_removed]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Enrollment' datatype='real' name='[enrollment]' role='measure' type='quantitative' />
      <column caption='Enrollment Type' datatype='string' name='[enrollment_type]' role='dimension' type='nominal' />
      <column caption='Has Expanded Access' datatype='boolean' name='[has_expanded_access]' role='dimension' type='nominal' />
      <column caption='Intervention' datatype='string' name='[intervention]' role='dimension' type='nominal' />
      <column caption='Intervention Type' datatype='string' name='[intervention_type]' role='dimension' type='nominal' />
      <column caption='Is Fda Regulated Device' datatype='boolean' name='[is_fda_regulated_device]' role='dimension' type='nominal' />
      <column caption='Is Fda Regulated Drug' datatype='boolean' name='[is_fda_regulated_drug]' role='dimension' type='nominal' />
      <column caption='Last Update Submitted Date' datatype='date' name='[last_update_submitted_date]' role='dimension' type='ordinal' />
      <column caption='Lead Or Collaborator (Ct Sponsors From Python.Csv)' datatype='string' name='[lead_or_collaborator (ct_sponsors_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Lead Or Collaborator' datatype='string' name='[lead_or_collaborator]' role='dimension' type='nominal' />
      <column caption='Limitations And Caveats' datatype='string' name='[limitations_and_caveats]' role='dimension' type='nominal' />
      <column caption='Months To Report Results' datatype='string' name='[months_to_report_results]' role='dimension' type='nominal' />
      <column caption='Nct Id (Ct Conditions From Python.Csv)' datatype='string' name='[nct_id (ct_conditions_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Nct Id (Ct Countries From Python.Csv)' datatype='string' name='[nct_id (ct_countries_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Nct Id (Ct Interventions From Python.Csv)' datatype='string' name='[nct_id (ct_interventions_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Nct Id (Ct Sponsors From Python.Csv)' datatype='string' name='[nct_id (ct_sponsors_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Nct Id' datatype='string' name='[nct_id]' role='dimension' type='nominal' />
      <column caption='Number Of Facilities' datatype='real' name='[number_of_facilities]' role='measure' type='quantitative' />
      <column caption='Official Title' datatype='string' name='[official_title]' role='dimension' type='nominal' />
      <column caption='Overall Status' datatype='string' name='[overall_status]' role='dimension' type='nominal' />
      <column caption='Phase' datatype='string' name='[phase]' role='dimension' type='nominal' />
      <column datatype='string' name='[reason_stopped]' role='dimension' type='nominal' />
      <column caption='Registered In Calendar Year' datatype='integer' name='[registered_in_calendar_year]' role='dimension' type='quantitative' />
      <column caption='Results First Posted Date' datatype='string' name='[results_first_posted_date]' role='dimension' type='nominal' />
      <column caption='Results First Submitted Date' datatype='string' name='[results_first_submitted_date]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Sponsor (Ct Sponsors From Python.Csv)' datatype='string' name='[sponsor (ct_sponsors_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Sponsor' datatype='string' name='[sponsor]' role='dimension' type='nominal' />
      <column caption='Sponsor Type (Ct Sponsors From Python.Csv)' datatype='string' name='[sponsor_type (ct_sponsors_from_python.csv)]' role='dimension' type='nominal' />
      <column caption='Sponsor Type' datatype='string' name='[sponsor_type]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column caption='Start Date Type' datatype='string' name='[start_date_type]' role='dimension' type='nominal' />
      <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
      <column caption='Study First Submitted Date' datatype='date' name='[study_first_submitted_date]' role='dimension' type='ordinal' />
      <column caption='Study Type' datatype='string' name='[study_type]' role='dimension' type='nominal' />
      <column caption='Target Duration' datatype='string' name='[target_duration]' role='dimension' type='nominal' />
      <column caption='Were Results Reported' datatype='boolean' name='[were_results_reported]' role='dimension' type='nominal' />
      <column caption='Why Stopped' datatype='string' name='[why_stopped]' role='dimension' type='nominal' />
      <column-instance column='[Study_Duration]' derivation='Attribute' name='[attr:Study_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Study_Duration]' derivation='Count' name='[cnt:Study_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[target_duration]' derivation='Count' name='[cnt:target_duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Study_Duration]' derivation='None' name='[none:Study_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reason_stopped]' derivation='None' name='[none:reason_stopped:nk]' pivot='key' type='nominal' />
      <column-instance column='[Study_Duration]' derivation='Sum' name='[sum:Study_Duration:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:reason_stopped:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;no ethics/regulatory committee approval&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;business decision&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hydroxychloroquine trial&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sponsor decision&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;investigator decision&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COVID-19&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;toxicity&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;investigator left institution&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;terminated/canceled&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;complete&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;recruitment issues&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;never started&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;safety&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;funding issues&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:target_duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[attr:Study_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Study_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Study_Duration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[sum:Study_Duration:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CT_covid_from_python.csv' id='CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='CT_covid_from_python.csv' table='[CT_covid_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='NCT Number' ordinal='1' />
                  <column datatype='string' name='Title' ordinal='2' />
                  <column datatype='string' name='Acronym' ordinal='3' />
                  <column datatype='string' name='Status' ordinal='4' />
                  <column datatype='string' name='Study Results' ordinal='5' />
                  <column datatype='string' name='Conditions' ordinal='6' />
                  <column datatype='string' name='Interventions' ordinal='7' />
                  <column datatype='string' name='Outcome Measures' ordinal='8' />
                  <column datatype='string' name='Sponsor/Collaborators' ordinal='9' />
                  <column datatype='string' name='Gender' ordinal='10' />
                  <column datatype='string' name='Age' ordinal='11' />
                  <column datatype='string' name='Phases' ordinal='12' />
                  <column datatype='real' name='Enrollment' ordinal='13' />
                  <column datatype='string' name='Funded Bys' ordinal='14' />
                  <column datatype='string' name='Study Type' ordinal='15' />
                  <column datatype='string' name='Study Designs' ordinal='16' />
                  <column datatype='string' name='Other IDs' ordinal='17' />
                  <column datatype='date' name='Start Date' ordinal='18' />
                  <column datatype='string' name='Primary Completion Date' ordinal='19' />
                  <column datatype='date' name='Completion Date' ordinal='20' />
                  <column datatype='date' name='First Posted' ordinal='21' />
                  <column datatype='date' name='Results First Posted' ordinal='22' />
                  <column datatype='date' name='Last Update Posted' ordinal='23' />
                  <column datatype='string' name='Locations' ordinal='24' />
                  <column datatype='string' name='Study Documents' ordinal='25' />
                  <column datatype='string' name='URL' ordinal='26' />
                  <column datatype='real' name='Study_Duration' ordinal='27' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='CT_from_python.csv' id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='CT_from_python.csv' table='[CT_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='nct_id' ordinal='0' />
                  <column datatype='date' name='study_first_submitted_date' ordinal='1' />
                  <column datatype='string' name='results_first_submitted_date' ordinal='2' />
                  <column datatype='date' name='last_update_submitted_date' ordinal='3' />
                  <column datatype='string' name='start_date_type' ordinal='4' />
                  <column datatype='date' name='start_date' ordinal='5' />
                  <column datatype='string' name='completion_date_type' ordinal='6' />
                  <column datatype='date' name='completion_date' ordinal='7' />
                  <column datatype='string' name='results_first_posted_date' ordinal='8' />
                  <column datatype='string' name='target_duration' ordinal='9' />
                  <column datatype='string' name='study_type' ordinal='10' />
                  <column datatype='string' name='brief_title' ordinal='11' />
                  <column datatype='string' name='official_title' ordinal='12' />
                  <column datatype='string' name='overall_status' ordinal='13' />
                  <column datatype='string' name='phase' ordinal='14' />
                  <column datatype='real' name='enrollment' ordinal='15' />
                  <column datatype='string' name='enrollment_type' ordinal='16' />
                  <column datatype='string' name='source' ordinal='17' />
                  <column datatype='string' name='limitations_and_caveats' ordinal='18' />
                  <column datatype='string' name='why_stopped' ordinal='19' />
                  <column datatype='boolean' name='has_expanded_access' ordinal='20' />
                  <column datatype='boolean' name='is_fda_regulated_drug' ordinal='21' />
                  <column datatype='boolean' name='is_fda_regulated_device' ordinal='22' />
                  <column datatype='integer' name='start_year' ordinal='23' />
                  <column datatype='real' name='number_of_facilities' ordinal='24' />
                  <column datatype='integer' name='registered_in_calendar_year' ordinal='25' />
                  <column datatype='real' name='actual_duration' ordinal='26' />
                  <column datatype='boolean' name='were_results_reported' ordinal='27' />
                  <column datatype='string' name='months_to_report_results' ordinal='28' />
                  <column datatype='string' name='sponsor_type' ordinal='29' />
                  <column datatype='string' name='lead_or_collaborator' ordinal='30' />
                  <column datatype='string' name='sponsor' ordinal='31' />
                  <column datatype='boolean' name='CovidStudy' ordinal='32' />
                  <column datatype='string' name='reason_stopped' ordinal='33' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ct_conditions_from_python.csv' id='ct_conditions_from_python.csv_F56187E8449C4EB5A2B7D6C8F5FBB956'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_conditions_from_python.csv' table='[ct_conditions_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='nct_id' ordinal='0' />
                  <column datatype='string' name='condition' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ct_countries_from_python.csv' id='ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_countries_from_python.csv' table='[ct_countries_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='nct_id' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='country_removed' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ct_interventions_from_python.csv' id='ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_interventions_from_python.csv' table='[ct_interventions_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='nct_id' ordinal='0' />
                  <column datatype='string' name='intervention_type' ordinal='1' />
                  <column datatype='string' name='intervention' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ct_sponsors_from_python.csv' id='ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23'>
            <properties context=''>
              <relation connection='textscan.19pvpdh09vqpyd1bkxehf0l5ytwb' name='ct_sponsors_from_python.csv' table='[ct_sponsors_from_python#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='nct_id' ordinal='0' />
                  <column datatype='string' name='sponsor_type' ordinal='1' />
                  <column datatype='string' name='lead_or_collaborator' ordinal='2' />
                  <column datatype='string' name='sponsor' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[nct_id]' />
              <expression op='[NCT Number]' />
            </expression>
            <first-end-point object-id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950' />
            <second-end-point object-id='CT_covid_from_python.csv_3CC2EDBD621B4AC1B9936C62A5992AC3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[nct_id]' />
              <expression op='[nct_id (ct_conditions_from_python.csv)]' />
            </expression>
            <first-end-point object-id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950' />
            <second-end-point object-id='ct_conditions_from_python.csv_F56187E8449C4EB5A2B7D6C8F5FBB956' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[nct_id]' />
              <expression op='[nct_id (ct_countries_from_python.csv)]' />
            </expression>
            <first-end-point object-id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950' />
            <second-end-point object-id='ct_countries_from_python.csv_AA5DF9786D984975801F704755013E51' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[nct_id]' />
              <expression op='[nct_id (ct_interventions_from_python.csv)]' />
            </expression>
            <first-end-point object-id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950' />
            <second-end-point object-id='ct_interventions_from_python.csv_F28B620BCC2949BDA227B0648BD23C5A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[nct_id]' />
              <expression op='[nct_id (ct_sponsors_from_python.csv)]' />
            </expression>
            <first-end-point object-id='CT_from_python.csv_0807A7AE290B49B9A05CAD67611B1950' />
            <second-end-point object-id='ct_sponsors_from_python.csv_C8C058B3F230425292139C1F7FC33E23' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='from CNN.com as of 12.18.20 (total cases per country)' inline='true' name='federated.10yprt003gh8ct15tm6sj17jx0as' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='total cases per country' name='excel-direct.0djle5t1ls4fd417xv1us0oms85q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kkosf/Documents/nss/projects/capstone/data/total cases per country.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0djle5t1ls4fd417xv1us0oms85q' name='from CNN.com as of 12.18.20' table='[&apos;from CNN#com as of 12#18#20$&apos;]' type='table'>
          <columns gridOrigin='A1:E219:no:A1:E219:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Cases' ordinal='1' />
            <column datatype='integer' name='_..per 100K people' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='string' name='_..per 100K people 1' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0djle5t1ls4fd417xv1us0oms85q' name='from CNN.com as of 12.18.20' table='[&apos;from CNN#com as of 12#18#20$&apos;]' type='table'>
          <columns gridOrigin='A1:E219:no:A1:E219:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Cases' ordinal='1' />
            <column datatype='integer' name='_..per 100K people' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='string' name='_..per 100K people 1' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E219:no:A1:E219:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_..per 100K people</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_..per 100K people]</local-name>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias>_..per 100K people</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_..per 100K people 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[_..per 100K people 1]</local-name>
            <parent-name>[from CNN.com as of 12.18.20]</parent-name>
            <remote-alias>_..per 100K people 1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='from CNN.com as of 12.18.20' datatype='table' name='[__tableau_internal_object_id__].[from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='from CNN.com as of 12.18.20' id='from CNN.com as of 12.18.20_38AD9B44DDC842A5BC67292B7353AF99'>
            <properties context=''>
              <relation connection='excel-direct.0djle5t1ls4fd417xv1us0oms85q' name='from CNN.com as of 12.18.20' table='[&apos;from CNN#com as of 12#18#20$&apos;]' type='table'>
                <columns gridOrigin='A1:E219:no:A1:E219:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Cases' ordinal='1' />
                  <column datatype='integer' name='_..per 100K people' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='string' name='_..per 100K people 1' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='daily hospitalizations+' inline='true' name='federated.17kxyc51u2m5hk13hs9wn1vnyyax' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daily hospitalizations' name='textscan.06mo059073xm8i10ovxhu1n90h87'>
            <connection class='textscan' directory='C:/Users/kkosf/Documents/nss/projects/capstone/data' filename='daily hospitalizations.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06mo059073xm8i10ovxhu1n90h87' name='daily hospitalizations.csv' table='[daily hospitalizations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='indicator' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='year_week' ordinal='3' />
            <column datatype='integer' name='value' ordinal='4' />
            <column datatype='string' name='source' ordinal='5' />
            <column datatype='string' name='url' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.06mo059073xm8i10ovxhu1n90h87' name='daily hospitalizations.csv' table='[daily hospitalizations#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='string' name='indicator' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='year_week' ordinal='3' />
              <column datatype='integer' name='value' ordinal='4' />
              <column datatype='string' name='source' ordinal='5' />
              <column datatype='string' name='url' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.06mo059073xm8i10ovxhu1n90h87' name='daily-covid-cases-deaths by country.csv' table='[daily-covid-cases-deaths by country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='date' name='Date' ordinal='2' />
              <column datatype='integer' name='Daily new confirmed cases of COVID-19' ordinal='3' />
              <column datatype='integer' name='Daily new confirmed deaths due to COVID-19' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>indicator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year_week]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>year_week</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[daily hospitalizations.csv]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily new confirmed cases of COVID-19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily new confirmed cases of COVID-19]</local-name>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias>Daily new confirmed cases of COVID-19</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily new confirmed deaths due to COVID-19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily new confirmed deaths due to COVID-19]</local-name>
            <parent-name>[daily-covid-cases-deaths by country.csv]</parent-name>
            <remote-alias>Daily new confirmed deaths due to COVID-19</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='daily hospitalizations.csv' datatype='table' name='[__tableau_internal_object_id__].[daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='daily-covid-cases-deaths by country.csv' datatype='table' name='[__tableau_internal_object_id__].[daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <column caption='Year Week' datatype='string' name='[year_week]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='daily hospitalizations.csv' id='daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4'>
            <properties context=''>
              <relation connection='textscan.06mo059073xm8i10ovxhu1n90h87' name='daily hospitalizations.csv' table='[daily hospitalizations#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='indicator' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='year_week' ordinal='3' />
                  <column datatype='integer' name='value' ordinal='4' />
                  <column datatype='string' name='source' ordinal='5' />
                  <column datatype='string' name='url' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='daily-covid-cases-deaths by country.csv' id='daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84'>
            <properties context=''>
              <relation connection='textscan.06mo059073xm8i10ovxhu1n90h87' name='daily-covid-cases-deaths by country.csv' table='[daily-covid-cases-deaths by country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='integer' name='Daily new confirmed cases of COVID-19' ordinal='3' />
                  <column datatype='integer' name='Daily new confirmed deaths due to COVID-19' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[Date]' />
            </expression>
            <first-end-point object-id='daily hospitalizations.csv_83F9E0DA31CB4D8B8F0413944AC22FE4' />
            <second-end-point object-id='daily-covid-cases-deaths by country.csv_3DC460B2B7BA4722BEACE5555021ED84' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.10yprt003gh8ct15tm6sj17jx0as'>
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.17kxyc51u2m5hk13hs9wn1vnyyax'>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.17kxyc51u2m5hk13hs9wn1vnyyax' target='federated.10yprt003gh8ct15tm6sj17jx0as'>
      <column-mapping>
        <map key='[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[none:country:nk]' value='[federated.10yprt003gh8ct15tm6sj17jx0as].[none:Location:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2020 studies vs covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[CovidStudy]' derivation='Count' name='[cnt:CovidStudy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_year]' derivation='None' name='[none:start_year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CovidStudy]' derivation='Count' name='[pcto:cnt:CovidStudy:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:ok]'>
            <groupfilter function='member' level='[none:start_year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' />
              <wedge-size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:CovidStudy:qk]' />
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[pcto:cnt:CovidStudy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F6692F6C-CAD7-4CA3-B892-6476288E06FE}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='daily hospitalizations+' name='federated.17kxyc51u2m5hk13hs9wn1vnyyax' />
            <datasource caption='from CNN.com as of 12.18.20 (total cases per country)' name='federated.10yprt003gh8ct15tm6sj17jx0as' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10yprt003gh8ct15tm6sj17jx0as'>
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17kxyc51u2m5hk13hs9wn1vnyyax'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[Longitude (generated)]' field-type='quantitative' max='8101638.6827643421' min='-11601198.585003017' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[Latitude (generated)]' field-type='quantitative' max='12058679.097073071' min='834214.57542073494' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[none:country:nk]' />
              <color column='[federated.10yprt003gh8ct15tm6sj17jx0as].[sum:Cases:qk]' />
              <geometry column='[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[Latitude (generated)]</rows>
        <cols>[federated.17kxyc51u2m5hk13hs9wn1vnyyax].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{388D10D6-A6AD-4103-932C-C8935E5F697B}' />
    </worksheet>
    <worksheet name='Total studies vs covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[CovidStudy]' derivation='Count' name='[cnt:CovidStudy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[CovidStudy]' derivation='Count' name='[pcto:cnt:CovidStudy:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' />
              <wedge-size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:CovidStudy:qk]' />
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[pcto:cnt:CovidStudy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7CFE223B-D155-42D4-B930-5A8A667E8171}' />
    </worksheet>
    <worksheet name='all conditions'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[condition]' derivation='Count' name='[cnt:condition:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:condition:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([condition])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:condition:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:condition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:condition:qk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:condition:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:condition:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AFA8E35A-30A3-4F2B-864A-0F0EAA88DE01}' />
    </worksheet>
    <worksheet name='all studies per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[start_year]' derivation='Count' name='[cnt:start_year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_year]' derivation='None' name='[none:start_year:qk]' pivot='key' type='quantitative' />
            <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:start_year:qk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:qk]</cols>
      </table>
      <simple-id uuid='{CBEEE7CB-160F-4A8F-8297-94829B4A9BE5}' />
    </worksheet>
    <worksheet name='all studies target duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[target_duration]' derivation='Count' name='[cnt:target_duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[target_duration]' derivation='None' name='[none:target_duration:nk]' pivot='key' type='nominal' />
            <column caption='Target Duration' datatype='string' name='[target_duration]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([target_duration])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;1 Day&quot;' function='range' level='[none:target_duration:nk]' to='&quot;20 Years&quot;' />
                  <groupfilter from='&quot;21 Days&quot;' function='range' level='[none:target_duration:nk]' to='&quot;99 Years&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:target_duration:qk]' />
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:target_duration:qk]</cols>
      </table>
      <simple-id uuid='{7C6033E7-F28A-4379-A4AB-B1EB27CDD205}' />
    </worksheet>
    <worksheet name='covid stopped titles'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column caption='Brief Title' datatype='string' name='[brief_title]' role='dimension' type='nominal' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[brief_title]' derivation='None' name='[none:brief_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[why_stopped]' derivation='None' name='[none:why_stopped:nk]' pivot='key' type='nominal' />
            <column caption='Why Stopped' datatype='string' name='[why_stopped]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]'>
            <groupfilter function='member' level='[none:CovidStudy:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;- Interest in the use of HCQ is controversial.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;1.) Not possible to recruit the planned number of patients during the planned study period; 2.)&#13;&#10;    \&quot;Dexamethason\&quot; was included in the standard of care for the study population during the course&#13;&#10;    of the study and inclusion criteria could no longer be met.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;A new coordinating center has been defined (Massachusetts General Hospital)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Azidus, the CRO hired for this study by Prevent Senior has lost the interest to conduct this&#13;&#10;    study.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Based on interim analysis for futility and given an enrolment rate almost nil&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Business Decision (no enrollment)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Business reasons&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Challenges with funding and very low incidence of COVID-19 at Irish study site&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;closed due to lack of interest and enrollment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;competent authority decision&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Competent Authority&apos;s decision&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Concerned about the adverse effects of HCQ&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;concerns related to study drug&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Could not make FDA required changes&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Currently, almost no patients admitted to Dutch hospitals. If any effect of HCQ is to be&#13;&#10;    expected we need more than 1000 inclusions&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Data from the CALAVI Phase II trials for Acalabrutinib in patients hospitalized with COVID-19&#13;&#10;    did not meet their primary efficacy endpoints.&#13;&#10;&#13;&#10;    Based on this higher management made the decision to prematurely terminate the D822FC00005 PK&#13;&#10;    study.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;decrease in number of eligible patients&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Did not obtain funding to proceed with study&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;discontinued in favor of more promising directions that may benefit patients&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;DSMB recommendation (futility)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;DSMB recommended study suspension slow accrual&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Due to business reasons, not safety issues.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Due to the pursuit of other SARS-CoV-2-related research including alternative trials with&#13;&#10;    tofacitinib, this trial was canceled prior to subject enrollment.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Efficiency and safety reasons&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Emerging evidence does not support the use of HCQ for treatment or prevention of SARS -CoV2&#13;&#10;    infection. No pts have been enrolled.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;End of the COVID 19 epidemic in the region and decision to participate in a national study on&#13;&#10;    the same subject (COVI-DOSE).&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Engagement issues, poor recruitment to study&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Enrolment was suspended on 22may2020, after Mehra et al (Lancet 2020) then stopped due to lack&#13;&#10;    of Covid19 cases.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Epidemic dynamics&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Equipoise for hydroxychloquine was lost&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Evidence that HCQ ineffective, loss of HCW interest,&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Failure to meet primary endpoint&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;FDA recommendations to not use outside of the hospital setting or in a clinical trial due to&#13;&#10;    the risk of cardiac arrhythmias&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Follow new disciplines on disease control from government&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Funding&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Funding not received&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Given enrollment challenges, partly attributable to the constantly changing COVID-19 treatment&#13;&#10;    landscape, the trial has been suspended.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Grant not obtained&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;halted prematurely.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Human Subjects Protection Review: submitted, denied&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;In anticipation for Data and Safety Monitoring Board&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;In view of the notices concerning hydroxychloroquine issued by the regulatory authorities, we&#13;&#10;    withdraw the protocol&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Interim analysis indicated adaptations to intervention may be required.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Internal decision&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;interrupted early due to the drastic reduction in the number of cases&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;investigator decision&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Investigator decision&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Investigators opted to change the design of the study.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;IRB AND FDA REVIEWS DEFERRED&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;It appeared to be impossible for the study centres to recruit the targeted number of patients,&#13;&#10;    due to reduced incidence and reduced acceptance to IMP&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;It was repeated with other studies in the same department&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Lack of enrollment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Lack of patients in the trial population from which to recruit and lack of funding&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;New coordinating center has been defined (Massachusetts General Hospital)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;No acute neurological patients presented with concomitant COVID-19&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;no additional parcipitants could be recruited at site.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;no authorization obtained&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;No COVID-19 in EU countries - Sponsor withdraw in regulatory stage&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;No Inclusion potentiel&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;No participants enrolled&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;No recruitment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Not approved by ethical committee&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Not authorized by Cofepris (Mexico Competent Regulatory Authority)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Not started&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Patients were transferred to designated hospitals for treatment as needed, the clinical trials&#13;&#10;    cannot be conducted.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;pending evaluation of data from other trial&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;PI withdrew the submission to the IRB&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Poor recruitment, strong evidence from larger trials of no therapeutic benefit&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Rate of enrollment too slow to allow completion in a reasonable timeframe&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;RECOVERY Trial results - no efficacy&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Regulatory approvals have not been obtained&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Request of Health Canada after publication of https://doi.org/10.7326/M20-4207&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Safety&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Similar projects have been registered, and it need to be withdrawn.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Slow enrollment rate&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Steering Committee decision in accordance with stopping rule 1: Emergence of new data&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Stop of the study by competent authority (ANSM)&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Stopped for futility by DSMB&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study abandoned due to drug billing issues&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study did not begin enrollment, multiple competing studies at same institution&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study Ended May 1, 2020 with no enrollment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study has been suspended due to the occurrence of SUSAR at University of Oxford sponsored&#13;&#10;    Phase2/3 study. Study will continue to be on hold until Russian MOH approval is received.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study has concluded.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study population not regularly admitted to hospital and approaches have shifted away from&#13;&#10;    repurposing old drugs.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study stopped due to low accrual&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study stopped due to opening Expanded Access Protocol.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study was not opened.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study was stopped because Principal Investigator did not obtain sponsorship to carry it out&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study was stopped because the Promoter was changed and a new study on convalescent plasma&#13;&#10;    promoted by AIFA was started in Italy.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study was terminated due to lack of adherence to the protocol in the intervention arm.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study was withdrawn due to challenges in site recruitment and lack of patient enrollment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Study withdrawn before any enrollment (site&apos;s research goals adjustments).&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;suspected unfavorable risk/benefit assessment&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;suspension of clinical trials with hydroxychloroquine by health authorities&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Technology was approved by FDA before study enrolled subjects&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Teminated due to changes in treatment guidelines .&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Terminated early because no patients were further enrolled since mid-Apr 2020.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The COVID-19 pandemic in China has ended completely. As a result, patient recruiting is&#13;&#10;    impossible in China.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The Data Monitoring Committee recommended to stop the trial based on the Recovery Trial&#13;&#10;    results, which was accepted by the CoDEX Steering Committee.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The epidemic of COVID-19 has been controlled well at present, no eligible patients can be&#13;&#10;    recruitted.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The epidemic of COVID-19 has been controlled well in China, no eligible patients can be&#13;&#10;    enrolled at present.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;the insurance contract hasn&apos;t been drafted yet&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The investigators have decided not to go forward with this protocol&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The IRB has determined that the design of this trial should be changed to a randomized&#13;&#10;    controlled trial. A new record will be created for the redesigned study.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The number of patients with COVID-19 in Singapore was coming down for the community and the&#13;&#10;    concerns about the potential side effects particularly when the baseline ECG and serum&#13;&#10;    electrolytes was not proposed.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The PI decided.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;the PROTECT study is being transitioned to ACTIV4 ACUTE anticoagulation inpatient study&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The research project was changed.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The sponsor decided to withdraw the study for funding reasons.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The study has been suspended until a new epidemic curve occurs.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;The study has been terminated due to changed clinical conditions and too few patients available&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;the study was started in the second half of the outbreak, and the number of qualifying COVID-19&#13;&#10;    patients decreased with the control of the epidemic so that we had to stop our trial before&#13;&#10;    reaching the predefined sample size.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;There was a change in the institutional flow reducing the cases of covid 19&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;There were no eligible patients in the paticipated centers.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;There were no eligible patients with CoVID-19 in the paticipated centers.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;This study was canceled before enrollment due to a decision by the Sponsor&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;To be replaced with a randomized placebo-controlled study.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Trial not started due to accumulating evidence against HCQ for COVID&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Trial terminated for futility.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Unable to obtain approval&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;unfavorable opinion of the ethics committee&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Withdrawn due to lack of study centers interested in participating.&quot;' />
              <groupfilter function='member' level='[none:why_stopped:nk]' member='&quot;Without CDE Approval&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</column>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]' value='604' />
            <format attr='width' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:brief_title:nk]' value='264' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk] / [federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:brief_title:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{F819A891-2D1C-4BAB-96AB-714893759BDE}' />
    </worksheet>
    <worksheet name='covid studies calculated duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column caption='Study Duration' datatype='real' name='[Study_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Study_Duration]' derivation='Count' name='[cnt:Study_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Study_Duration]' derivation='None' name='[none:Study_Duration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;completed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Study_Duration:qk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Study_Duration:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Study_Duration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{643C18E0-4224-4A37-A22E-F58B2D43FBD2}' />
    </worksheet>
    <worksheet name='covid studies target duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[target_duration]' derivation='Count' name='[cnt:target_duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[target_duration]' derivation='None' name='[none:target_duration:nk]' pivot='key' type='nominal' />
            <column caption='Target Duration' datatype='string' name='[target_duration]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]'>
            <groupfilter function='member' level='[none:CovidStudy:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([target_duration])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;1 Day&quot;' function='range' level='[none:target_duration:nk]' to='&quot;20 Years&quot;' />
                  <groupfilter from='&quot;21 Days&quot;' function='range' level='[none:target_duration:nk]' to='&quot;99 Years&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:target_duration:qk]' />
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</column>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:target_duration:qk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</cols>
      </table>
      <simple-id uuid='{FD35121B-BCF7-4BD6-96DC-95B92DE619EB}' />
    </worksheet>
    <worksheet name='interventions - covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Interventions1' datatype='string' name='[Interventions]' role='dimension' type='nominal' />
            <column-instance column='[Interventions]' derivation='Count' name='[cnt:Interventions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interventions]' derivation='None' name='[none:Interventions:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Interventions:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Interventions])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Interventions:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Interventions:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Interventions:qk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Interventions:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Interventions:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{53D62D3C-2057-4E8B-BE45-005EC8EDE216}' />
    </worksheet>
    <worksheet name='involves drug-covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[is_fda_regulated_drug]' derivation='Count' name='[cnt:is_fda_regulated_drug:qk]' pivot='key' type='quantitative' />
            <column caption='Is Fda Regulated Drug' datatype='boolean' name='[is_fda_regulated_drug]' role='dimension' type='nominal' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fda_regulated_drug]' derivation='None' name='[none:is_fda_regulated_drug:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]'>
            <groupfilter function='member' level='[none:CovidStudy:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:is_fda_regulated_drug:nk]' />
              <wedge-size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:is_fda_regulated_drug:qk]' />
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:is_fda_regulated_drug:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{601394D0-92F6-4584-8F1C-CA0A819C67A1}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Enrollment' datatype='real' name='[enrollment]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[enrollment]' derivation='Sum' name='[sum:enrollment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aejrbf1xo46is1do5ocr0rygx7s].[sum:enrollment:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:country:nk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[Multiple Values]' />
              <lod column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[:Measure Names]' />
              <geometry column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[Latitude (generated)]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{49585A98-6718-4F44-8409-AC46BFCF39D2}' />
    </worksheet>
    <worksheet name='overall status 2020 only'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[overall_status]' derivation='Count' name='[cnt:overall_status:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[overall_status]' derivation='None' name='[none:overall_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_year]' derivation='None' name='[none:start_year:ok]' pivot='key' type='ordinal' />
            <column caption='Overall Status' datatype='string' name='[overall_status]' role='dimension' type='nominal' />
            <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:ok]'>
            <groupfilter function='member' level='[none:start_year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:overall_status:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:overall_status:qk]</rows>
        <cols>([federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk] / [federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:overall_status:nk])</cols>
      </table>
      <simple-id uuid='{5232BEF9-73B2-4088-B765-54BAB097B246}' />
    </worksheet>
    <worksheet name='start date covid vs noncovid studies 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Count' name='[cnt:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:start_date:ok]'>
            <groupfilter function='member' level='[yr:start_date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[mn:start_date:ok]' value='85' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:start_date:qk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[mn:start_date:ok]</cols>
      </table>
      <simple-id uuid='{0873673B-945E-4B65-B4AF-E3EE0F64C2C6}' />
    </worksheet>
    <worksheet name='submitted date covid vs noncovid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[study_first_submitted_date]' derivation='Count' name='[cnt:study_first_submitted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[study_first_submitted_date]' derivation='Month' name='[mn:study_first_submitted_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column caption='Study First Submitted Date' datatype='date' name='[study_first_submitted_date]' role='dimension' type='ordinal' />
            <column-instance column='[study_first_submitted_date]' derivation='Year' name='[yr:study_first_submitted_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:study_first_submitted_date:ok]'>
            <groupfilter function='member' level='[yr:study_first_submitted_date:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:study_first_submitted_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[mn:study_first_submitted_date:ok]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:study_first_submitted_date:qk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[mn:study_first_submitted_date:ok]</cols>
      </table>
      <simple-id uuid='{37D9ECB6-646F-4B9B-A685-73C49810A831}' />
    </worksheet>
    <worksheet name='top 25 sponsors - all'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[sponsor]' derivation='Count' name='[cnt:sponsor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sponsor]' derivation='None' name='[none:sponsor:nk]' pivot='key' type='nominal' />
            <column caption='Sponsor' datatype='string' name='[sponsor]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([sponsor])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:sponsor:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{ECD03E2C-C03D-463C-81D8-F12234F6F08B}' />
    </worksheet>
    <worksheet name='top 25 sponsors -covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[sponsor]' derivation='Count' name='[cnt:sponsor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[sponsor]' derivation='None' name='[none:sponsor:nk]' pivot='key' type='nominal' />
            <column caption='Sponsor' datatype='string' name='[sponsor]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]'>
            <groupfilter function='member' level='[none:CovidStudy:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([sponsor])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:sponsor:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' />
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]</column>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' />
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B6920EDF-69D3-44D8-9117-ED5E91F2ABAC}' />
    </worksheet>
    <worksheet name='top reasons covid studies stopped'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column caption='Covid Study' datatype='boolean' name='[CovidStudy]' role='dimension' type='nominal' />
            <column-instance column='[reason_stopped]' derivation='Count' name='[cnt:reason_stopped:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CovidStudy]' derivation='None' name='[none:CovidStudy:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason_stopped]' derivation='None' name='[none:reason_stopped:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[reason_stopped]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]'>
            <groupfilter function='member' level='[none:CovidStudy:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:reason_stopped:nk]' member='&quot;business decision&quot;' />
              <groupfilter from='&quot;COVID-19&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;investigator decision&quot;' />
              <groupfilter from='&quot;never started&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;safety&quot;' />
              <groupfilter function='member' level='[none:reason_stopped:nk]' member='&quot;terminated/canceled&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' />
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</column>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' />
              <text column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B6C8D4AB-78AA-49ED-8EE0-BFF0CE513026}' />
    </worksheet>
    <worksheet name='top reasons studies stopped'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[reason_stopped]' derivation='Count' name='[cnt:reason_stopped:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reason_stopped]' derivation='None' name='[none:reason_stopped:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[reason_stopped]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([reason_stopped])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;business decision&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;investigator left institution&quot;' />
                  <groupfilter from='&quot;never started&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;toxicity&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' />
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]</cols>
      </table>
      <simple-id uuid='{14F00DDF-F6FE-4878-BAFA-EBA5175620BA}' />
    </worksheet>
    <worksheet name='top reasons studies stopped in 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='CT_from_python+' name='federated.0aejrbf1xo46is1do5ocr0rygx7s' />
          </datasources>
          <datasource-dependencies datasource='federated.0aejrbf1xo46is1do5ocr0rygx7s'>
            <column-instance column='[reason_stopped]' derivation='Count' name='[cnt:reason_stopped:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reason_stopped]' derivation='None' name='[none:reason_stopped:nk]' pivot='key' type='nominal' />
            <column-instance column='[registered_in_calendar_year]' derivation='None' name='[none:registered_in_calendar_year:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[reason_stopped]' role='dimension' type='nominal' />
            <column caption='Registered In Calendar Year' datatype='integer' name='[registered_in_calendar_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:reason_stopped:nk]' member='&quot;business decision&quot;' />
              <groupfilter from='&quot;COVID-19&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;investigator left institution&quot;' />
              <groupfilter from='&quot;never started&quot;' function='range' level='[none:reason_stopped:nk]' to='&quot;terminated/canceled&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]' direction='DESC' using='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' />
          <filter class='categorical' column='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:registered_in_calendar_year:ok]'>
            <groupfilter function='member' level='[none:registered_in_calendar_year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:registered_in_calendar_year:ok]</column>
            <column>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</rows>
        <cols>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]</cols>
      </table>
      <simple-id uuid='{C01889D6-3DA6-443C-909F-46662B2B996D}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='Total studies vs covid'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[pcto:cnt:CovidStudy:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FD9369B-0899-474A-B222-A4C4908E0F54}' />
    </window>
    <window class='worksheet' name='2020 studies vs covid'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[pcto:cnt:CovidStudy:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D846058E-7674-48F8-A74C-6225A1B93276}' />
    </window>
    <window class='worksheet' name='all studies per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:start_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{266840E4-A9F2-43B4-AD98-7312027A51B1}' />
    </window>
    <window class='worksheet' name='start date covid vs noncovid studies 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[mn:start_date:ok]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BE1EEAF-92E6-48EE-A4B9-029F331543D4}' />
    </window>
    <window class='worksheet' name='submitted date covid vs noncovid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:study_first_submitted_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[yr:study_first_submitted_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5892F11-EFF3-4470-B3DE-83947B8A669A}' />
    </window>
    <window class='worksheet' name='all studies target duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:nct_id:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4373617-D660-4768-AD27-AC5205C666FF}' />
    </window>
    <window class='worksheet' name='covid studies target duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[:Measure Names]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:nct_id:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:target_duration:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96F141EC-3126-4627-B4AE-644D21A8C2EC}' />
    </window>
    <window class='worksheet' name='covid studies calculated duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Study_Duration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Status:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Study_Duration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FE2E04C-CC00-4432-BA83-7CB3C684E515}' />
    </window>
    <window class='worksheet' name='top reasons studies stopped'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped_map:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7DD98C6B-8D42-4C33-874F-159BD4719A7B}' />
    </window>
    <window class='worksheet' name='top reasons studies stopped in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:why_stopped_map:qk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:registered_in_calendar_year:qk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57E6A185-BA1D-4974-8E20-DFBEECBB3B60}' />
    </window>
    <window class='worksheet' name='top reasons covid studies stopped'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:reason_stopped:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:reason_stopped:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:why_stopped_map:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20D54A26-2EB4-42CA-A0BD-D1D5DEE96C40}' />
    </window>
    <window class='worksheet' name='overall status 2020 only'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:overall_status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:enrollment_type:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:overall_status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DCB0781-2DD5-44DA-B988-04365834A7B4}' />
    </window>
    <window class='worksheet' name='covid stopped titles'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:brief_title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B1A1C28-B183-457D-9482-397D9625D0EE}' />
    </window>
    <window class='worksheet' name='top 25 sponsors - all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{326C2315-D202-428D-919C-C02A0767E6C3}' />
    </window>
    <window class='worksheet' name='top 25 sponsors -covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:sponsor:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:sponsor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AB289D6-473B-41F7-8A6F-CC63C12A4E3A}' />
    </window>
    <window class='worksheet' name='involves drug-covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:is_fda_regulated_drug:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:is_fda_regulated_drug:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:is_fda_regulated_drug:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58076D7D-8118-4FF4-AB73-6BFE824D3997}' />
    </window>
    <window class='worksheet' name='interventions - covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Interventions:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:Interventions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Conditions:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:CovidStudy:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:Interventions:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:intervention:nk]</field>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:intervention_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B8B213B-CAC2-4D7B-8EFE-D6A027F0006E}' />
    </window>
    <window class='worksheet' name='all conditions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[cnt:condition:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:condition:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{209AEB4F-93B6-40B6-8B90-B4E0F2305C31}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aejrbf1xo46is1do5ocr0rygx7s].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aejrbf1xo46is1do5ocr0rygx7s].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34C230DC-9997-458E-910B-8B98B4A2C58D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10yprt003gh8ct15tm6sj17jx0as].[sum:Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D9BB2933-C401-44C6-949A-EF527E52D322}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name='2020 studies vs covid' width='164'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Total studies vs covid' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='all conditions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='all studies per year' width='192'>
      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
      5v8D2HXHgGTYMNYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='all studies target duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='covid stopped titles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='covid studies calculated duration' width='192'>
      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
      vuwj//9GM70drkGjKQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='covid studies target duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='interventions - covid' width='192'>
      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
      JhKPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='involves drug-covid' width='164'>
      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
      WQHzmAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='overall status 2020 only' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='start date covid vs noncovid studies 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='submitted date covid vs noncovid' width='192'>
      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
      n+f/AynD4K6TsfaFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 25 sponsors - all' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3d6ZPjdn7f8TcOAgQJ3mc3m3333IdWq12vKhV7vXaVHSeP8r+kUqnKf5GH
      eZQneew4lcT2Opvy2rW2Je3OaqQZabqn75P3CYIgCCAPONPSSCPNaERNTw9/ryc9zQbALzH4
      ED9cv58UBEGAIMwo+aILEISLJAIgzDT1y7/897/5iI+3ji+qlktlvZxjUExcdBlvjHIiStdx
      LrqMl1KOR6lYNvCVANzbPOKv/+nhhRR12fz05jKdUfGiy3hj3CmkqA4GF13GSxmOPXbaXUA0
      gYQZ99wAJGMGP7u1TCmXoFxIfePMCTPM+7dXyKdiz85vGsQiOrIkUczEAShm4sSjYZaKaXJJ
      k3g0PMWPcbGqn94jCAIq93+L742fO82gXgEgCAKaWw+pf/YJg1rlhcv2RiNOPvon7FYDgMrH
      H1F7eJ/A9wHwPQ+7Wf/2ZbgulY8/YlCvfpeP9UoC3+f4k3s4/R52p/3tdY1dRgOLYbdDEPg/
      eG1fVd/bebYJ9NS1pQJ7p00koJSLo2squaRJqztAkiRURSYVj9DsWsiSRKs34M9+dh1Zlmh3
      bTqWzVIxzWGlxUI+iVXOMXI9YhGdj7eOySSieL7Pe9cXGQxHtPs2+VSMf7j3mMt4TnZQr2I3
      avRPDjHSWQa1CnoixbBVRzPjyGoIb+TgdNokV68wqNdIrV2ld3JAa3eLzMZ1Ovs7GJkc3aM9
      jHQOd9AnXl5Bi8ZwrR6eMwRAUhSiuQKNzYe4Vg8jk6ezv00kV8R3Rzi9DqoeJja/iFU9Jbmy
      Tv/smMy120jAyUe/IZxMM2zWieSKDBpVjHSW1OqVqayLgIB+vYaiaiBJVD5/iJFMoeo6/tgl
      CMAdWIxHI+SQSr9WJbO8ilSrMBoMmL95B0l+PQ2TfrPxzU2gnjVksTj59l8uprlSzjP2ffIp
      E9PQOaq2GDou9x8f8/7tFQ4rLRpti77tYBo6J/UOOyd1jmsd2j0ba+jQGzgYeghZlogaOpVm
      D8secXttniAIkCTptXzwaTOLJSr3PyI6V6Kzt03ge3ijIemNG4ydIfHFZazaGU8vueRvv0tr
      ZxM1HCG5tEbncA93YNE9PiBeXkEOhUgub+D0OvRODjDSWdq7W+fzj/o93H6P5MoGTqdFYnEV
      ORRCjUQxUhnMuRKt3c3JBuf7KHqYUa/DoFHFLJZwBxZ6Mo2eTBEvL+NOue2eLC3SPjlk0KyT
      WVnDtS161TN8z6d7ekRtZ4tYoUhu7QqZpVVc20aPmjjdDuPRaKq1fBvNiDx/D/DRZwfcWpvn
      0X6VAEjFDLaP67S6A2qtHrIkkU/HOKy0ub5c4IMHe6iKgqLI+L6PLMs4I5eFfIq908muOwAs
      e0QuadLsDpBlCd8PkCQ4rrUpZuL4l/SaXLy8TDRXQNHDyKpKZ3+b2MISqh4mubKBdXbC3I/f
      JxhPmkd2s05icQU9kUJWVUJRk37lhEgmjxoO09nfoV85IXPlBoHn0d57TGxhCQA1bKAaBoUf
      /ZT2ziaZa7cIPO88HPg+sqoSyRbo7G+jmXHCqQzt3S0i2fxk77N6BSQJzxnS2dumcPc9hp0W
      4cQ3N3dfliTJJEsLxHJ5VD1M63CfwtUbuMMhWjSKqmtk164QTWdRw2GQIL20AoCZL6Lq+veu
      4WWZmSzSl68E/4f/8pfiLNBL+unNZTpXfpizQL7nIcnyD75HfHocMY0mx2U6C3QrlxJngd5k
      sqK8luagJMtTb28HQUC/VsXp9/Cm2JzxPQ/Pdb/2XuPRq197GI+c5zeBBOFVBYFP5dFDZFVF
      0TQ0I0JqcZnG7jaZlXX6tTNCYYNhr4vnuqSXVmjsPia/cY36zmOSC4u0DvZJLpRRdR273WL/
      o39m6Sfvo+phepVTYvki7aMDMqvr1Le3UMNhYrkCkVT6O9V69uhzsQcQps/udggZEWRFPd9o
      B8061UcPGVkW/XoNq9lA0TT6tQpWo87uv/wGM1egvr2F3W1z+uATht0O3bNTUgtLyIpCfWcL
      3Yzhj8c4/R7Vzc8BGDTqjAbWK9Uq9gDCVElIzF2/RWZljdbRAaqmY3faqOEIeiyGmc3hWBZa
      JIoWieBYFiEjQiSdobm3g5nL441dEvML1HceE44nGDtDxsMh8cIcndNjjEQKRdPRTRNZnWzC
      41e4DSMci4kACNMlyTKZlTUAUguLAMTyhWemiaQyz/yeW9t45venZ4WS8wtfW36yVJ5ardnl
      VdEEEmabCIAw00QAhJkmAiDMNBEAYaaJAAgzTQRAmGkiAMJMEwEQZpoIgDDTRACEmSYCIMw0
      EQBhpokACDNNBECYaSIAwkwTARBmmgiAMNNEAISZJgIgzDQRAGGmiQAIM00EQJhpIgDCTBMB
      EGaa6BnuFUnSpJttYaIcj16a7tG/TATgFQUBfFprXXQZb4zXNKrR1F3SsgVhOkQApsC1BwRB
      cP4z8D2G7Sb++NkRI8dD+2vzfnWaFwmCgFG/h+d+t8EnxkMb9xW7EH+biSbQFOz/v79m5U//
      LTt/+1es/5t/j9Pr0NnfBiTm3v0DYDIy4sE//B3Lv/gLekf7hEwTWQ1xdu8Dyu//nO7RHuZ8
      GafTQpJlAs9DNaI4vTZGKkv/7JjkygZ2vcKw3cScW6BTrxLJFnAHffzxmHAqg92ooplxPGeI
      Fkvg2hZGKkP1k9+RWFrF6XaQJAlJlnG6bbyRw9hxSCyu4Fp99GQa1+phFksXu1JfExGAKTDn
      Fqg/vE8kNxkzTJIkzGKJYbt5Pk17dwtJVugdH0w2usaQwBsTX1ik+uAe3sjBHVhEsnnsRg1F
      DzNo1AgZEZqPPyO1cgXr7JiR1Se1dhUkCWdnk0HtbDIUq6Yx7LTIXrvF4T/+XxRNRzUiZK/f
      wR1YRAvzRPNz7Pzt/0SLx9GiMUJRE0U3iObnqN7/HcgSejxJ5sr1i1qVr50IwBREcgX6lRPi
      pUXGT5pBnf0dovkiw04LPZ4kFImy8id/QWv7EeFkGs8d4XTb2M06sbkyw04LI5PDyObxxy5O
      dzLer9NtE8kVUSMRvPGIeCpD9dN7RPOTsIWiMYx0lgDwRw6d/R0iuSKKphOKRAkZEVQ9THv3
      MUHgE8kX0ONJFE1H0TQkSaZ3ckgkX0CSZbRYAtWIXuwKfY3EKJGv6IccJfIyEqNECsIlJAIg
      zDQRAGGmiQAIM00EQJhpIgDCTHvmOsDGcpH20L2oWi6Vq4t5/hnvossQvqdnArB91uLDxycX
      VcvloiqwkLzoKoTvSTSBhJn23AAs5pMYmko+aZ6/pocmO4tkNPytC8wnJ5fR1+YzbJQy36mY
      p/N+marIqIpMMhomrD1758bTmr5aeykTJx0zyCejGJrKe1dKpGMG2USUpYL41ha+8Nx7gTLx
      CKmYgaYqxCI6STPMfDrOo6MaY89nIZcgGtZo922yiSiPDmuslTIcVNos5BIMHJdoWOPB3hnr
      8xkSZhjLHpFLRtk6qrNSTHPc6FLKxjlp9Mgno3z06IilQoqkaZBPmhxU28xn4ni+TyIaZve0
      ydVynp2zBiPXIwgCbi0X2Tquoyoysixxf+eMQsqkZ49YyCUmtyYDH2+fEg1rpGMGiWiY/Ur7
      Na/mt58qy/x47rt94V0UVZa58eRpvucGwB17uJ5PJh4hpCiU8wm2TxrsnjZ5Z30eSZKwnBEJ
      0+CT3TNuLBUIKTLr8xmG7uT+dunJsvJJk6Viik92Ttk5bbKxkOW3m8f87MYizmhMJm6wfdLg
      6Q1JIUVh67hOPBpGkSU61oizZo9iOsZZq8fjowbvbpSQZThudNmvtPl3P7vGfqWFxORJLQg4
      a/W4uzrHWav/g65MYcIPAva7l29dPzcAJ40e7b79ZGuSsIYjDmttFgsp9ittwpqKGdZ4fNzA
      Ho3ZPWsyn4lTafUZex59e4Q1HLE6l6bRG2A5I04aXRzX4+PtU66Vc3y6e0Y5n+Sg2qZnOwDs
      V1qMPZ/haEwQBMQMncNam9W5yd5lMHJZm8/QGQwJh1QOam1K2Ti/3z4FIAACAqqtPq2+TUTX
      2DtrcWd1jp3TBrWORczQX9e6FS6BZ+4G/Y//9f/wNx9tXmQ935umKnh+gOf7X/ubLEuEFBnH
      /f6nL39yrUxLnAU6904xzZgxge/TOj0hpOvoURPNMAA4/PQ+ZjrD0Oozt3H1pZfbPDokvVB+
      5rXtD/8FWVFY/tGPkSTp/PVBp4Oqaefv+TLeuucBRuNv3rh9P8Dxxbn7H1IQBOx89AGyolC6
      foNOtUI0lebowSeYmSypuXk++/tfETIM9KiJoqiM7AGSJDHs94nn8/QbDdLlRTILZTqVM9IL
      ZY4efoo/HrN45x1kRUZRVeoHe7RPT4jnC3TOTokkkvQadZLFeexeB82IsHDj1rfWK06DClOX
      XVqidO0GvVqN+avXcW2b4sYV8itrZJdWSBbnmdu4iiRJNI72OXu8iaJp5JZXcCyLhVu36Tfq
      nD2etEZ8z6N1fHT+e/PokObxEVarSfnmHc62HpFeWCRsxijfusug06a2t/tStb51ewDhYkmy
      TH51HUVRSZcXqTzeZOHmLUa2jRIKoWo6qdICqq6RLS8R0nVC18JEEknkkEo4FkczIhTXN9Cj
      Jmdbm9T2dskurxCOTk7LX/+jX6CEQvhjj9r+Lrf+5M+o7e5gZjKEYyal6zeIZbLo0Rc/2SYC
      IEyVJElE4onz3xdu3gZA1b44+aCYkw1ZDWmEY7Fn5tfCk/a7ok6mKW5c+dp7RBJfHHuVb935
      2nRqSCNsxr423/OIJpAw00QAhJkmAiDMNBEAYaaJAAgzTQRAmGkiAMJMEwEQZpoIgDDTRACE
      mSYCIMw0EQBhpokACDNN3A36iiTgTl4Mk/rUYjzKTrdz0WV8ZyIA38ODmuhd4ilVll480RtI
      NIGEmSYCMAWnv/tn3IGFVaucv2Y3G/jemJH1zV2FWLUKrj3Aqk9+fpXdbOCPx7gDC7vZOH/d
      9zyGnecP0u37Hmcff4TvjRk0ajS3H2G3GgzqVaza2St/Rqfb+dbPclmJJtAU+GOP9sEOSkin
      uf0ILRKlvb9D6af/CqfTxm430WMJnG4bSZaJzZepf/YJyeU11HAY1+oTjD3O7n1AOJlm0KiS
      Wtng9N4HzL37M5xum+bjz8hs3CBWKtPa3qR3dkx69Qrdo33m3v0DBo0adqtBOJ7Eqp4C72BV
      zwg8D3cwwB+7eM6Q2oOPiWTzDNstzOI8w3YTRQ+jmTF8zyO9dpXjD/4RLWoy6veRFJlwKoNV
      PSV3/Q5EzReuj8tEBGAKwqk0drOOqoeBAKfXIV5aRA0bdI8OMFIZ3IGFkc4CYFXP8L0xY2d4
      vowg8EkurzPqd4nm57CbdeKlRUKGgT8eEZtbICCYDKGq6cTmSgzbLSK5ArKq4g4szMI8njsi
      ubw+6bysegpIyFoIVTcYO0N833tmlEizWMJuNXA6bYxMlvHQxnddBo06sfkFALyhjZmfu4A1
      +8MTAZiCRHmFRHmZIAgYthroiRTeyEFWVPK33mHYapIoL/O0vzzPdYjNl9HjicmGqIfP+7cx
      0hmGnRaaGcd3R0iKgjm3gBo20ONJ7GaD1OoCw06LcCKJVaugRqJkr93Gqp2RKq3jjUYEASz8
      7A+RVZXx0EYJTTb2aH6OUDSKomr4Y5e9X/+S7JUb2K0msfkykqyQXFknnEghqyFgEs7hk73Y
      2+at6xjrdfnptTKdsjgN+tTdQooR44su4zsTB8FT4A6+ODj0PY/u0f5zp/PHLuOh/a3L6p8d
      0zs5JPD9Vz7odHpd7FaTkdXHHfQnzRpvjN1qEPge7sDCtQc0tj7DG42wqq9+cHzZiSbQFLS2
      t9ATSUb9Lr7v41p9fG+MpChIkszYGVL/7BPmf/w+ajhMa2eTSK74pNkT4I3HuJZFanWDfvWU
      SCZP53CPUCRK52Bn0k5v1NDMGO5ggKyqIEkEvo+i6biDPqFIlLFtk1xZp7O/jZHO0dj8lFDE
      RIvFiWTyNLcfEc0VcC0L1YigxxNUH9zDSGVxep23sonzIiIAU+IOLELRGIHnEc0VqH56DyOd
      Qwlp5G7cYWxZKLpOa/cxsbkS/bNjJEkiCEAzTbzRpINgSVKIZPO0djZxrT7eyMHpdmjubBKb
      KxP4Y+xWk3hpEYKA9u4WqhEhki3guZNlBEGAJEtPgrSLFovjOUPsRg1vaGOkcwCoYQNF0wkn
      029tG/9FRACmIJzOIKuhSW9lnkfIMDCLJUKRKAQBnaM9ZC3E2LaJlxbpnRxiZHM43Q7jgYWR
      npwlgsmG29h8SHrtKsN2E7vVQFZVzPwc4WQKu1XHSGVQNI2xPSBWWiTwxqi6zng4uZYgyQqK
      HiaWSDHstNDNOK49YOWP/xyrVgUClJBGa3sTc67EoFnDLMxf6Dq8KOIg+BW9yQfBTy+qhYzI
      C6cNgoBhu4mR+n6DW1zWg2CxB3gLvcyG/5QkSd9747/MRACEqVBkmZX4y/XH+SYRARCmwg8C
      6sOv38/0phPXAYSZJgIgzDTRBBKmyvc9Pvir/8H6ez/B9zx6jQbJQpGH//Brbv/iF4R0nbPt
      bXKLS9T290iXSlitNnokQq/ZYPVH72L3urQrFaLJJPXDQ/LLy4xHI7Swgd3roeoanWqNSCLO
      yB7iDm0Wb91m9/f3WLx5i6PPPwcCwqZJ+MlYBCFNwxuPqR8ekltcotuooyiKCIAwZQEU19Y5
      fPAp6dICo+GQ6t4OxfU1At9n//595q9exeq0iWWydKpVhv0+ld0d4vnJBbogmNxS0ms2qR3s
      4/seZirN4cMHqJpONJFg0O3SODogkS+gahqB7+ONJ6OLeu4IVdNxLIteo4Ea0vC8McNeDyQ4
      fvQ5xbV1WqcnogkkTJckScTSadLzC4T0MIqiYKbS4Af4Y4/C6hqnW1uEdJ1IIk40mQQJYpkM
      sfTkdKwSCmHE4xAERBNJzGSKZL6AZkSIpdOk5uZBAjOdIZ7NEU2mQJKIZ3M8/u2H5JaXiWUy
      RFMpYpkMxbU1FFWlsLqKZkRIl0pEUyk0wxAXwl7Vm3wh7CK8U0yj6V8fmvZNJ/YAwkwTARCm
      yvd9jh99Tv3wELvX+8bphv0+jeOjL+bzPI43H72OEp/xzEHwejlHyx699iIuo6vlLB94Yl19
      TRBw8OABsiKTX17B7nYJhcOcbG1y649+zv4n9zFicWKZLNu//ZBbf/wLPv67X7J48yayrLz2
      cp8JwE6lxUc7p6+9iMtIUmQovF0PiE9LfnkZIxbD7vfQIxGQJPJLyzSOjwmFw5PxgkMq6dIC
      vXqd4uoazsDGMF//+hSnQYWpkmSZ5Tt3kSQJSZJwbBvNMBjZNpIkUT88oLg2eWg/s1BGkiTG
      rktI11+88B/AcwNQzsbJJ00eHFTZmEtz1OjS6g+fN6kgPEOSJBT1i80q/GS09qc/S1evnf9N
      ViZNHlXTXmOFz3puAIopk4cHNf71jUVSpoE1dIkbOqvFFHvVNtl4hGbPJqQqfH5Uf901C8LU
      PPcsUFgLcb2c4182j/n8qE46ZjB0x2yftbhRzhNSFHKJKJvHjefNLgiXxnP3AJvHDSrtPrIs
      cdrsIcsS+UQUkLi/VyEdMzht9vC/uIYmCJfScwNQaU+64/D9gFp38OQ16/zvh/XL1w22IDyP
      uBAmzDQRAGGmiQAIM00EQJhpIgDCTBO3QnwPkZBYfU/pikzA5XseQPwPvioJFuIv3wHV2y4d
      0WmMRM9wsyOA/c7bN2bWq4rrIeTQRVfx3YljAGGmiQBMwf5v/p7A99n7x1/hj91vnC7wfU4/
      /ojmzhat3ccMvzSwtOeOcAeXr2e1y040gabA98Z0jw+fDJVa5fDD35BeWcMsluge7TMeOeix
      BPG5EkYqQ3JxhbP7v2M0sOgAo36PSDaPPx4zbDfJXb9FOJ686I81E8QeYArMfJHqZ/cxi/P0
      KieYuQJa1OTk3geYhTnC8ST+2CUUidKvnp6PJxx4HnIoRO76bcbOEG/kTAbOC13c/fGzRuwB
      piC9ukFycRVZUQgIcC0LORTC6feIz5cJGRE0M44SCpG/fofA98heuwlMHiCRFZXs+jUkWcbp
      985HZxR+eCIAU6CENJQvbbOqNnm8b+7OjwGe6X9f+4aBppUnT0UZSdHX0OskmkDCTBMBEGaa
      aAIJU6HKEqup+EWX8Z2JAAhT4QUBx/3Ld2VcNIGEmSYCIEyV7/t88utfc/DZQ063t7E6HXzf
      53R7G4B+q8Xp9jan29sEL9GpQu3wEIDd+/fZvX//peb5LkQTSJiuIMDqtEkVCnQbDUZDm4Wr
      1+g2GsytrVE9OMB1JiPaDwcDDNMkns3SrdfZ/v3vWbh6lW69TjKfp3l6iiTLpIpFxu6IjR+/
      x6MPPmBo9YnE4vRaTVRNI5HNUTs4IJbJoBkGtYMDUoUCg26XSCJBYXmZfrvF/Nr618oVewBh
      6jLzJbILCwC4zqQDYd/3sPv9840fIFUocLy5iWGaNE6O8T0PZzBg7Z13sDod4pkMmq6jKAp2
      r0+v2WTsukTiCcauS/nadUobV3Adh0Q+T+D7tKsVrG4HJRRi6dYt0sUiH//qV+QXF59bq9gD
      CFMlyTJmMkmnXmfp5s0nV7oVShtXaJ2dsnTjBkgSAFanQ3ZhAUmSWLp5i8LyCmYyiRYOs3r3
      Lp1alfzSEpIss/7uu1idDqt37mD3+0STSRRFAUnCME02P/yQ6++/j93rERAQiSdQVJVhv0+2
      XEb5hqvrz4wQ85/+2y/5m3vbr2dNXXI/2Shhly7fab8fyp1Ciohx+TpKE00gYaaJAAgzTQRA
      mGkiAMJMEwEQZpoIgDDTRACEmSYCIMw0EQBhpokACDNNBECYaSIAwkwTARBmmgiAMNNEAISZ
      9swDMWuLeX469i6qlkvl6nyGe47ozfmyeyYAe7bDvZ59UbVcKsrAAeWiqxC+L9EEEmbaNwYg
      EX5xF91JQ2M5HUNXxVehcDk996H4qKbyp1dK/OUne9wspmjaDu8vFfj77VNMXcX1fMIhleO2
      RSkRpWOPuJ5PstPospSOUenZRDWVkTcZNVCVJTRVwR6NOepYr/UD/pBu5sQgFk+V41Ea7uXr
      Ge65AbiaT+KMPVYyMeJhjZo1ZKfRJRsNU+3blBJR1jJx6n2bSm/AaiZGOKRwJZ+k1rdZSEZZ
      SERpDhxsd8zvTxr8pJwjlY2/VQH4vN558UQzIqTIhMMXXcV399wmUMce8b8eHgBgu2NCioyu
      KgzcMW3bQZYkmoMhV/NJkoZOc+Dg+QFn3QGd4Yh6f8hZz6bSsxmOPZZSMWRJojVwnvd2gnBh
      nrsH2G50AXhc756/dtD6Yvd277j+tXl2m73zf7ftEQftZ3eHO43uV2d5awwadUYDi2R56ZnX
      nV4XLWoiyTKuPUBW1Zca/qhfq9A+2CNRKhMrzp+/ZuYK9GsVQmEDRdfPB+L4Nt3TI2LFEr2z
      YyRJxvc8EqUyAGPHOR/U75sG7ngqCAKsehUzV3jhe14momOsKehVTvA9DwiwW01CkQhjxyFk
      GMhNlWGnjfdkQ4sV5uieHqObcZx+l8R8mc7xAWZhDqteJb28xqjfJbN2hcb2I8YjB280YtCo
      0dzdQo8l0KMmiqbTPtonFDYIRaIEgY8sywyaDebvvoesTv5rO0cHWLUKI6tPyJhMN+y0GFmT
      4ZuG3Q7tg13m3/kJrb1tzHwRszBH53CPwPcJJ1KEE0kqn32CrCj0K6cgSRRu3EF60sHVZSYC
      8D0FQUD35AgkiUg6y2hgocfjDKtn+K5LorRI9+SQSDpHJJOjubtF5+iAzPpVclduUHl4n9yV
      69S3Pp8sz/fxPZ/61kPy127TPtzD6fcIJ1MQBIxHDuORg9PvkVxYonN8QOD7uPaAYadFJJMj
      CAIaO1vE5xdQ9TDF2z/i9P7vIPDPgxGbW8DutNCiMVJLq/SrZwyakz27HovjWH1GVp9oroDd
      bpJaWqV3ekxj+xGZ9WtfWw+KJLFgfvte5E0kAvA9BZ7H0vt/iKyGGFk9opkskVSWwPMx80Uk
      WSaSyZNeWad9uEuyvEw0VyCayaIaEebfeY/O4T7F2z+itb+DHk8QikRJL68iKSqKppNengyh
      6nvek2aWhKyqtA52QZIIJ5JEMjny12/Rr54hqyqZ1Q0AUstrAKRX1nHtAQQB3dMj1JFBdu0q
      AJ3jQ6LZPFokSmyuROdwn9TiClrUZDxyiKez1LcfkVxcIZrNw3O++C/r+ADPdI34n//3B/xy
      8/gi67k03ivnGKj+hdYQBAGB7yEr3+17zPc8ZGW6125uF1IY4YtdH69CXAmegkGz/syo70+N
      neEP+r5Ph1j9rqa98X9ZEARs//4ee59+et6X/9MxAr7qdHubdq3GoNs9n7ffbr9w+f12m06t
      NpV6RRNoCqqfP0DVdRKlRYbdNrFiiWGnjaKFAInx0Ca5uPJWHDS+iOs4EMDyrVvsffop1f19
      cuUySijEoNfFH3uMhkPu/vzndBsNJFmmdXZGr9Egns3gjT3qqkLgB1idDoNul3g2QyQe5+Tx
      Nhvvvku7WmX/4QNW794lnsnSazZZunnzleoVe4ApGPV7yKqK0+vS2t+h/vhzQpEI/crkwNId
      zs4NhoqqYnW79FpNWpUKg14Px558/tU7dwmCgJCu4wcBI2dIr9lEUVWWb9/G9wM818UZ2JOT
      C40G6fk5tLDBwtVrZEsl6sfH+L5HYXmF0sYVHn34wflYBK9C7AGmILtxjfTKOrVHD9FjcYxE
      CiOZxul2kBQFu9W86BJfG0VVWbt7l+HAYuX2bYLAxzBjyIpCSNNYunmT8WiEoiis3L7D0LJI
      5nJIsoweiRD4PpIkIckyheVl7H6fWDqNJEnEs1nimQxIEq7jMOh2iSaSROKv3k29OAh+RW/C
      QfCbRBwEC8IlJAIgzDQRAGGmiQAIM00EQJhpIgDCTBMBEGaaCIAw00QAhJkmAqt6e+MAAABj
      SURBVCDMNBEAYaaJAAgzTQRAmGkiAMJMEwEQZpoIgDDTRACEmSYCIMw0EQBhpokACDNNBECY
      aSIAwkwTARBm2jMdY61m4vx4QYzi8jKu5BI4yuXrB+eHUo5H0bXgxRO+Yf4/ZjVw+cRlHSUA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 25 sponsors -covid' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top reasons covid studies stopped' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top reasons studies stopped' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top reasons studies stopped in 2020' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
